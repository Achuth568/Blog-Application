# Docker Profile Configuration
server.port=8080

# Database Configuration for Docker
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://mysql:3306/blogdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:bloguser}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:blogpassword}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.MySQL8Dialect}
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000

# Redis Configuration (if using Redis)
spring.redis.host=${REDIS_HOST:redis}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.timeout=2000ms

# Logging Configuration
logging.level.com.blog=INFO
logging.level.org.springframework.security=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Actuator Configuration for Health Checks
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin123

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Application Info
info.app.name=Blogging Application
info.app.description=Spring Boot Blogging Application
info.app.version=1.0.0